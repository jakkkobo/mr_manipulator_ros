#!/usr/bin/env python3

PACKAGE = "mr_dynamic"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
pose = gen.add_group("Position")
set_velocity = gen.add_group("Set Velocity for Position Mode")
velocity_controller = gen.add_group("Velocity Controller")
# parameters = gen.add_group("Parameters")

# 'name', 'type', 'level', 'description', 'default', 'min', 'max'
# side
# side_enum = gen.enum([gen.const("Inside", double_t, 1.0, "Inside"),
#                     gen.const("Outside", double_t, -1.0, "Outside")], "Robot following side")
# side.add("map_side", double_t, 0, "Robot moves by the Inside or Outside of the question mark", 1.0, -1.0, 1.0, edit_method=side_enum)

# Position
pose.add("position_x", double_t, 0, "X position of the end-efector", 0.1, 0.1, 0.25)
pose.add("position_y", double_t, 0, "Y position of the end-efector", 0.0, -0.25, 0.25)
pose.add("position_z", double_t, 0, "Z position of the end-efector", 0.1, 0.1, 0.25)

# Velocity Controller
velocity_controller.add("linear_velocity_x", double_t, 0, "Linear velocity of the end-efector on X axis", 0.3, 0.0, 0.99)
velocity_controller.add("linear_velocity_y", double_t, 0, "Linear velocity of the end-efector on Y axis", 0.3, 0.0, 0.99)
velocity_controller.add("linear_velocity_z", double_t, 0, "Linear velocity of the end-efector on Z axis", 0.3, 0.0, 0.99)
# controller.add("kp_wall_linear", double_t, 0, "Inverse propotional linear controller to wall distance", 0.05, 0.0, 0.1)

#Set Velocity for Position Mode
set_velocity.add("set_linear_velocity_x", double_t, 0, "Set linear velocity of the end-efector on X axis", 0.0, 0.0, 0.99)
set_velocity.add("set_linear_velocity_y", double_t, 0, "Set linear velocity of the end-efector on Y axis", 0.0, 0.0, 0.99)
set_velocity.add("set_linear_velocity_z", double_t, 0, "Set linear velocity of the end-efector on Z axis", 0.0, 0.0, 0.99)



# Parameters
# parameters.add("distance_to_wall", double_t, 0, "Distance to wall", 0.7, 0.0, 1)
# parameters.add("max_laser_range_to_wall", double_t, 0, "Max valid range to wall detection", 2.0, 0.0, 10.0)

gen.add("EMERGENCY_STOP", bool_t, 0, "An emergency button", False)

gen.add("Send_Position", bool_t, 0, "Click to send the parameters position", False)

gen.add("Enable_Velocity_Control", bool_t, 0, "Click to enable velocity control", False)

exit(gen.generate(PACKAGE, "mr_dynamic", "RobotArm"))
